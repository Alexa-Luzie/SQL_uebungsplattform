generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rolle {                                   //enum (short for "enumeration") is a data type that defines a set of predefined, constant values.
  STUDENT
  TUTOR
  DOZENT
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String                             // Achtung: Passwort wird gehashed gespeichert!
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isBlocked Boolean  @default(false)
  rolle     Rolle    @default(STUDENT)
  submissions Submission[]
  solutions Solution[] // Gegenrelation zu Solution
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  database    String   // ID der zugeh√∂rigen Datenbank
  solution    String
  status      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  submissions Submission[]
  solutions Solution[] // Gegenrelation zu Solution
}

model ImportedDatabase {
  id         Int      @id @default(autoincrement())
  name       String                                         // Name der importierten Datenbank
  fileName   String                                         // Name der hochgeladenen SQL-Datei
  uploadedAt DateTime @default(now())
  uploadedBy String                                         // User-ID des Uploaders
  path       String                                         // Pfad zur gespeicherten SQL-Datei
  created    Boolean  @default(false)                       // wurde die DB erstellt
}

model Submission {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  answer    String
  isCorrect Boolean
  createdAt DateTime @default(now())
}

model Solution {
  id            Int      @id @default(autoincrement())
  taskId        Int
  userId        String
  solutionQuery String
  isCorrect     Boolean
  createdAt     DateTime @default(now())

  Task Task @relation(fields: [taskId], references: [id])
  User User @relation(fields: [userId], references: [id])
}